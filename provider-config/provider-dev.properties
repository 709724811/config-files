server.port=8087
server.servlet.context-path=/provider

#数据库连接配置 druid
spring.application.name=provider

spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/usernew?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.useGlobalDataSourceStat=true
    #deny=192.168.1.0/24
spring.datasource.loginUsername=admin
spring.datasource.loginPassword=admin


spring.redis.nodeList=localhost:6380,localhost:6381,localhost:6382
#是否初始化redis服务
spring.redis.enabled=true   
    #password=pHej06Irl
#连接超时时间
spring.redis.timeOut=30
#读取数据超时时间
spring.redis.soTimeout=20   
#最大重试次数
spring.redis.maxAttempts=3  
#资源池中最大连接数 默认=8
spring.redis.maxTotal=30    
#资源池允许最大空闲的连接数，默认8
spring.redis.maxIdle=20     
#资源池确保最少空闲的连接数 默认值0
spring.redis.minIdle=10     
#调用者的最大等待时间，-1不超时
spring.redis.maxWaitMillis=30  
#空闲资源的检测周期(单位为毫秒), 默认值 -1
spring.redis.timeBetweenEvictionRunsMillis=-1   


mybatis.mapper-locations=classpath*:/mapper/*.xml
mybatis.check-config-location=true
mybatis.type-aliases-package=com.springcloud.test.entity
mybatis.configuration:
mybatis.mapUnderscoreToCamelCase=true

pagehelper.autoDialect=true
pagehelper.closeConn=false
pagehelper.reasonable=true

feign.name=provider
feign.hystrix.enabled=true

eureka.client.name=provider
#默认是true，将自己注册到eureka上
eureka.client.register-with-eureka=true
#是否从eureka上获取信息，由于本案例是单机，无需从别的eureka上获取注册信息    
eureka.client.fetch-registry=true    
#服务中心
eureka.client.service-url.defaultZone=http://10.16.85.199:8091/eureka/,http://10.16.85.199:8092/eureka/,http://10.16.85.199:8093/eureka/ 
#查询服务和注册服务都需要依赖这个地址，默认是：http://localhost:8761/eureka
eureka.client.instance.prefer-ip-address=true 
# 将自己的IP注册到Eureka Server。若不配置或设置为false，表示注册微服务所在操作系统的hostname到Eureka Server